services:
  postgres:
    image: postgres
    container_name: pp-postgres
    environment:
      - POSTGRES_DB=ppsimple
      - POSTGRES_PASSWORD=ppsimple
      - POSTGRES_USER=ppsimple
    ports:
      - 5432:5432
    volumes:
      - ./postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ppsimple -d ppsimple" ]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: on-failure
    networks:
      - pp-network

  kafka:
    image: bitnami/kafka
    container_name: pp-kafka
    ports:
      - 9092:9092
      - 9094:9094
    environment:
      - KAFKA_ENABLE_KRAFT=yes
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:9094
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092,EXTERNAL://localhost:9094
      - KAFKA_BROKER_ID=1
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_NODE_ID=1
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@127.0.0.1:9093
      - KAFKA_AUTO_CREATE_TOPICS_ENABLE=true
      - BITNAMI_DEBUG=yes
      - KAFKA_CFG_NUM_PARTITIONS=2
    healthcheck:
      test: [ "CMD-SHELL", "kafka-topics.sh --list --bootstrap-server localhost:9092" ]
      interval: 10s
      timeout: 10s
      retries: 5
    networks:
      - pp-network

  kafka-ui:
    image: provectuslabs/kafka-ui
    container_name: pp-kafka-ui
    depends_on:
      - kafka
    ports:
      - 8085:8080
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
    networks:
      - pp-network

networks:
  pp-network:
    driver: bridge

volumes:
  pp-simple: